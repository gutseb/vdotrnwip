---
# tasks file for satellite_artifact_export
- name: Hello
  debug:
    msg: Hello world

- name: create temporary git repository directory
  tempfile:
    state: directory
  register: git_root_dir

- name: Clone existing repository to {{ git_root_dir.path }}
  shell: |
    cd {{ git_root_dir.path }}
    git clone {{ export_git_url }} repo
    cd repo
    git checkout -b {{ export_git_branch }} || git checkout {{ export_git_branch }}

- name: Clean our managed part of the git repo
  file:
    path: "{{ git_root_dir.path }}/repo/managed"
    state: absent

- name: "Global : Artifact Type Loop"
  include_tasks: artifact_block.yml
  vars:
    organization:
      id: -1
      name: GLOBAL (FAKE) ORG
  loop:
    - name: settings
      is_katello: false
      is_virt_who: false
      unique_key: name
    - name: compute_profiles
      is_katello: false
      is_virt_who: false
      unique_key: name
    - name: usergroups
      is_katello: false
      is_virt_who: false
      unique_key: name
    - name: roles
      is_katello: false
      is_virt_who: false
      unique_key: name
    - name: bookmarks
      is_katello: false
      is_virt_who: false
      unique_key: name
    - name: remote_execution_features
      is_katello: false
      is_virt_who: false
      unique_key: name
    - name: discovery_rules
      is_katello: false
      is_virt_who: false
      unique_key: name
    - name: common_parameters #global parameters
      is_katello: false
      is_virt_who: false
      unique_key: name
    - name: locations
      is_katello: false
      is_virt_who: false
      unique_key: name
    - name: domains 
      get_individual_records: true
      is_katello: false
      is_virt_who: false
      unique_key: name
    - name: subnets
      get_individual_records: true
      is_katello: false
      is_virt_who: false
      unique_key: name
    - name: module_streams 
      is_katello: true
      is_virt_who: false
      unique_key: name
    - name: compute_resources 
      is_katello: false
      is_virt_who: false
      unique_key: name
    - name: repositories
      get_individual_records: true
      is_katello: true
      is_virt_who: false
      unique_key: name
  loop_control:
    loop_var: artifact_type

- name: Fetch organizations
  uri:
    url: https://{{ansible_host}}/api/v2/organizations
    force_basic_auth: true
    body_format: json
    return_content: true
    url_username: "{{ satellite_api_username }}"
    url_password: "{{ satellite_api_password }}"
    validate_certs: "{{ curl_validate_certs }}"
  register: organizations_result

- name: Debug out organizations_result
  debug:
    var: organizations_result.json.results
    verbosity: 1

- name: Organization loop
  include_tasks: organization_block.yml
  loop: "{{ organizations_result.json.results }}"
  loop_control:
    loop_var: organization

- name: Add, commit and push git to remote server {{ git_root_dir.path }}/repo
  shell: |
    cd {{ git_root_dir.path }}/repo
    git add -A
    git commit -m "Ansible export commit"
    git push -f --set-upstream origin {{ export_git_branch }}

- name: Cleanup tmp location
  file:
    path: "{{ git_root_dir.path }}"
    state: absent 
  when: io_git_keep_repos is undefined or not io_git_keep_repos
